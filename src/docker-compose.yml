services:    
    mongo:
        image: mongo
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        ports:
            -   "27017:27017"
            
    topics-service:
        build:
            context: .
            dockerfile: ../Diploma1/Services.TopicsService/Dockerfile
        ports:
            - "8080:8080"
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
        depends_on:
            -   mongo
            
    auth-service:
        build:
            context: .
            dockerfile: ../Diploma1/Services.IdentityService.Cognito/Dockerfile
        ports:
            -   "5010:8080"
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
        depends_on:
            -   auth-service-db  
            
    messages-service:
        build:
            context: .
            dockerfile: ../Diploma1/Services.MessagesService/Dockerfile
        ports:
            -   "5215:8080"
        environment:
            - ASPNETCORE_ENVIRONMENT=Docker
            
                
    auth-service-db:
        image: postgres
        restart: always
        environment:
            POSTGRES_USER: auth-service-pg
            POSTGRES_PASSWORD: auth-service-pg
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            -   "5430:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data/pgdata
                
networks:
    topics-service-network:
        driver: bridge
        
volumes:
    pgdata:
        driver: local